[
    {
        "Status": "OPEN"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "All the URI's that are not valid should return 404 which is method not found.",
        "Rule": "6.1.0",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "A Redfish interface shall be exposed through a web service endpoint implemented using Hypertext Transfer Protocols, version 1.1 (RFCL616).",
        "Rule": "6.1.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "Each unique instance of a resource shall be identified by a URI; thus a URI cannot reference multiple resources though it may reference a single collection resource.",
        "Rule": "6.1.2",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "The unique identifier part of a URI shall be unique within the implementation.",
        "Rule": "6.1.6",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "URIs, as described in RFCL986, may also contain a query (?query) and a frag (#frag) components.  Queries are addressed in the section Query Parameters.  Fragments (frag) shall be ignored by the server when used as the URI for submitting an operation.",
        "Rule": "6.1.7",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Status": "TX_COMMENT"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "The service shall set the Location header to the URI of the newly created resource.   ",
        "Rule": "6.1.8.1.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "It may include a response body containing the representation of the newly created resource",
        "Rule": "6.1.8.1.2",
        "Status": "PASS"
    },
    {
        "Description": "\nPOST\nObject create, Object action, Eventing\nYes\n",
        "Rule": "6.1.8.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "\nGET\nObject or Collection retrieval\nYes\n",
        "Rule": "6.1.8.2",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "~ note: PATCH could not be verified",
        "Status": "line"
    },
    {
        "Description": "\nPATCH\nObject update\nYes\n",
        "Rule": "6.1.8.3",
        "Status": "WARN"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': '********'}",
        "Status": "TX_COMMENT"
    },
    {
        "Comment": "DEBUG response headers: Location: /redfish/v1/Sessions/17; X-Auth-Token: 02c23d2197d2ea075ceeca0f74d1fa07",
        "Status": "line"
    },
    {
        "Description": "\nDELETE\nObject delete\nYes\n",
        "Rule": "6.1.8.4",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "<PUT and HEAD may be also be supported> - Other HTTP methods are not allowed and shall receive a 405 response.",
        "Rule": "6.1.9",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "All resources shall be made available using the JSON media type\n  \"application/json\".",
        "Rule": "6.1.11",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "Redfish services shall make every resource available in a representation based on JSON, as specified in RFC4627. Receivers shall not reject a message because it is encoded in JSON, and shall offer at least one response representation based on JSON.",
        "Rule": "6.1.12",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "~ GET:/redfish/v1/Registries/ManagerAttributeRegistry failed : HTTP status 200:OK, Expected statuses: [406]",
        "Status": "line"
    },
    {
        "Comment": "200:OK is also an acceptable status",
        "Status": "line"
    },
    {
        "Description": "Clients may request compression by specifying an Accept-Encoding header in the request.\n Responses to GET requests shall only be compressed if requested by the client.\n\n Services should support gzip compression when requested by the client.",
        "Rule": "6.1.13",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "Implementations should support returning ETag headers for each response that represents a single resource.  Implementations shall support returning ETag headers for certain requests and responses as listed in the Security section.",
        "Rule": "6.1.14",
        "Status": "WARN"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "A GET on the resource \"/redfish\" shall return the following body:\njson { \"v1\": \"/redfish/v1/\" } ",
        "Rule": "6.2.3",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "~ GET /redfish : HTTP status 200:OK",
        "Status": "line"
    },
    {
        "Comment": "~ GET /redfish/v1/ : HTTP status 200:OK",
        "Status": "line"
    },
    {
        "Comment": "~ GET /redfish/v1/odata : HTTP status 200:OK",
        "Status": "line"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata : HTTP status 200:OK",
        "Status": "line"
    },
    {
        "Description": "Redfish is a hypermedia API with a small set of defined URIs.  All other resources are accessible via opaque URIs referenced from the root service.  The following Redfish-defined URIs shall be supported by a Redfish service:\n\n/redfish The URI that is used to return the version \n/redfish/v1/ The URI for the Redfish Service Root \n/redfish/v1/odata The URI for the Redfish OData Service Document \n/redfish/v1/$metadata The URI for the Redfish Metadata Document ",
        "Rule": "6.3.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "In addition, the following URI without a trailing slash shall be either Redirected to the Associated Redfish-defined URI shown in the table below or else shall be treated by the service as the equivalent URI to the associated Redfish-defined URI:\n\n/redfish/v1     /redfish/v1/ ",
        "Rule": "6.3.2",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "All relative URIs used by the service shall start with a double forward slash (\"//\") and include the authority (e.g. //mgmt.vendor.com/redfish/v1/Systems) or a single forward slash (\"/\") and include the absolute-path (e.g. /redfish/v1/Systems).",
        "Rule": "6.3.3",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "Redfish services shall understand and be able to process the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"Yes\".",
        "Rule": "6.4.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata with Accept type 'application/xml'",
        "Status": "line"
    },
    {
        "Description": "\nAccept\nYes\nRFC 2616, Section 14.1\nIndicates to the server what media type(s) this client is prepared to accept. application/json shall be supported for requesting resources and application/xml shall be supported for requesting metadata.\n",
        "Rule": "6.4.2.1",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'} and wihtout content type in request headers",
        "Status": "TX_COMMENT"
    },
    {
        "Comment": "1st POST returned status 415",
        "Status": "line"
    },
    {
        "Comment": "Requesting POST (/redfish/v1/Sessions) WITH the required header Content-Type : application/json; charset=utf-8 and request body {'UserName': 'root', 'Password': 'redfish'}",
        "Status": "line"
    },
    {
        "Comment": "2nd POST returned status 201",
        "Status": "line"
    },
    {
        "Description": "\nContent-Type\nConditional\nRFC 2616, Section 14.17\nDescribes the type of representation used in the message body.  charset=utf-8 shall be supported for requests that have a body.  Shall be required if there is a request body.\n",
        "Rule": "6.4.2.2",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Comment": "~ GET: /redfish/v1/Registries/ManagerAttributeRegistry HTTP status 200:OK with request header: OData-Version and incorrect value: 3.0 passed, which is an unexpected behavior",
        "Status": "line"
    },
    {
        "Description": "\nOData-Version\nYes\n4.0\nServices shall reject requests which specify an unsupported OData version.\n",
        "Rule": "6.4.2.3",
        "Status": "FAIL"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "\nAuthorization\nconditional\n4.0\nRequired for [Basic Authorization\n",
        "Rule": "6.4.2.4",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "\nUser-Agent\nYes\nRFC 2616, Section 14.43\nRequired for tracing product tokens and their version.  Multiple product tokens may be listed.\n",
        "Rule": "6.4.2.5",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Description": "\nHost\nYes\nRFC 2616, Section 14.23\nRequired to allow support of multiple origin hosts at a single IP address.\n",
        "Rule": "6.4.2.6",
        "Status": "PASS"
    },
    {
        "Status": "BEGIN_ASSERTION"
    },
    {
        "Rule": "0.0.0"
    },
    {
        "Rule": "6.1.0"
    },
    {
        "Description": "All the URI's that are not valid should return 404 which is method not found.",
        "Rule": "6.1.0"
    },
    {
        "Rule": "6.1.1"
    },
    {
        "Description": "A Redfish interface shall be exposed through a web service endpoint implemented using Hypertext Transfer Protocols, version 1.1 (RFCL616).",
        "Rule": "6.1.1"
    },
    {
        "Rule": "6.1.2"
    },
    {
        "Description": "Each unique instance of a resource shall be identified by a URI; thus a URI cannot reference multiple resources though it may reference a single collection resource.",
        "Rule": "6.1.2"
    },
    {
        "Rule": "6.1.6"
    },
    {
        "Description": "The unique identifier part of a URI shall be unique within the implementation.",
        "Rule": "6.1.6"
    },
    {
        "Rule": "6.1.7"
    },
    {
        "Description": "URIs, as described in RFCL986, may also contain a query (?query) and a frag (#frag) components.  Queries are addressed in the section Query Parameters.  Fragments (frag) shall be ignored by the server when used as the URI for submitting an operation.",
        "Rule": "6.1.7"
    },
    {
        "Rule": "6.1.8.1"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.1.8.1"
    },
    {
        "Rule": "6.1.8.1.1"
    },
    {
        "Description": "The service shall set the Location header to the URI of the newly created resource.   ",
        "Rule": "6.1.8.1.1"
    },
    {
        "Rule": "6.1.8.1.2"
    },
    {
        "Description": "It may include a response body containing the representation of the newly created resource",
        "Rule": "6.1.8.1.2"
    },
    {
        "Description": "\nPOST\nObject create, Object action, Eventing\nYes\n",
        "Rule": "6.1.8.1"
    },
    {
        "Rule": "6.1.8.2"
    },
    {
        "Description": "\nGET\nObject or Collection retrieval\nYes\n",
        "Rule": "6.1.8.2"
    },
    {
        "Rule": "6.1.8.3"
    },
    {
        "Comment": "~ note: PATCH could not be verified",
        "Rule": "6.1.8.3"
    },
    {
        "Description": "\nPATCH\nObject update\nYes\n",
        "Rule": "6.1.8.3"
    },
    {
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': '********'}",
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "DEBUG response headers: Location: /redfish/v1/Sessions/20; X-Auth-Token: f72c82b292f5e0acd94b00b811a2d585",
        "Rule": "6.1.8.4"
    },
    {
        "Description": "\nDELETE\nObject delete\nYes\n",
        "Rule": "6.1.8.4"
    },
    {
        "Rule": "6.1.9"
    },
    {
        "Description": "<PUT and HEAD may be also be supported> - Other HTTP methods are not allowed and shall receive a 405 response.",
        "Rule": "6.1.9"
    },
    {
        "Rule": "6.1.11"
    },
    {
        "Description": "All resources shall be made available using the JSON media type\n  \"application/json\".",
        "Rule": "6.1.11"
    },
    {
        "Rule": "6.1.12"
    },
    {
        "Description": "Redfish services shall make every resource available in a representation based on JSON, as specified in RFC4627. Receivers shall not reject a message because it is encoded in JSON, and shall offer at least one response representation based on JSON.",
        "Rule": "6.1.12"
    },
    {
        "Rule": "6.1.13"
    },
    {
        "Comment": "~ GET:/redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1VCCIOPG failed : HTTP status 200:OK, Expected statuses: [406]",
        "Rule": "6.1.13"
    },
    {
        "Comment": "200:OK is also an acceptable status",
        "Rule": "6.1.13"
    },
    {
        "Description": "Clients may request compression by specifying an Accept-Encoding header in the request.\n Responses to GET requests shall only be compressed if requested by the client.\n\n Services should support gzip compression when requested by the client.",
        "Rule": "6.1.13"
    },
    {
        "Rule": "6.1.14"
    },
    {
        "Description": "Implementations should support returning ETag headers for each response that represents a single resource.  Implementations shall support returning ETag headers for certain requests and responses as listed in the Security section.",
        "Rule": "6.1.14"
    },
    {
        "Rule": "6.2.3"
    },
    {
        "Description": "A GET on the resource \"/redfish\" shall return the following body:\njson { \"v1\": \"/redfish/v1/\" } ",
        "Rule": "6.2.3"
    },
    {
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/ : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/odata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Description": "Redfish is a hypermedia API with a small set of defined URIs.  All other resources are accessible via opaque URIs referenced from the root service.  The following Redfish-defined URIs shall be supported by a Redfish service:\n\n/redfish The URI that is used to return the version \n/redfish/v1/ The URI for the Redfish Service Root \n/redfish/v1/odata The URI for the Redfish OData Service Document \n/redfish/v1/$metadata The URI for the Redfish Metadata Document ",
        "Rule": "6.3.1"
    },
    {
        "Rule": "6.3.2"
    },
    {
        "Description": "In addition, the following URI without a trailing slash shall be either Redirected to the Associated Redfish-defined URI shown in the table below or else shall be treated by the service as the equivalent URI to the associated Redfish-defined URI:\n\n/redfish/v1     /redfish/v1/ ",
        "Rule": "6.3.2"
    },
    {
        "Rule": "6.3.3"
    },
    {
        "Description": "All relative URIs used by the service shall start with a double forward slash (\"//\") and include the authority (e.g. //mgmt.vendor.com/redfish/v1/Systems) or a single forward slash (\"/\") and include the absolute-path (e.g. /redfish/v1/Systems).",
        "Rule": "6.3.3"
    },
    {
        "Rule": "6.4.1"
    },
    {
        "Description": "Redfish services shall understand and be able to process the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"Yes\".",
        "Rule": "6.4.1"
    },
    {
        "Rule": "6.4.2.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata with Accept type 'application/xml'",
        "Rule": "6.4.2.1"
    },
    {
        "Description": "\nAccept\nYes\nRFC 2616, Section 14.1\nIndicates to the server what media type(s) this client is prepared to accept. application/json shall be supported for requesting resources and application/xml shall be supported for requesting metadata.\n",
        "Rule": "6.4.2.1"
    },
    {
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'} and wihtout content type in request headers",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "1st POST returned status 415",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST (/redfish/v1/Sessions) WITH the required header Content-Type : application/json; charset=utf-8 and request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "2nd POST returned status 201",
        "Rule": "6.4.2.2"
    },
    {
        "Description": "\nContent-Type\nConditional\nRFC 2616, Section 14.17\nDescribes the type of representation used in the message body.  charset=utf-8 shall be supported for requests that have a body.  Shall be required if there is a request body.\n",
        "Rule": "6.4.2.2"
    },
    {
        "Rule": "6.4.2.3"
    },
    {
        "Comment": "~ GET: /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1VCCIOPG HTTP status 200:OK with request header: OData-Version and incorrect value: 3.0 passed, which is an unexpected behavior",
        "Rule": "6.4.2.3"
    },
    {
        "Description": "\nOData-Version\nYes\n4.0\nServices shall reject requests which specify an unsupported OData version.\n",
        "Rule": "6.4.2.3"
    },
    {
        "Rule": "6.4.2.4"
    },
    {
        "Description": "\nAuthorization\nconditional\n4.0\nRequired for [Basic Authorization\n",
        "Rule": "6.4.2.4"
    },
    {
        "Rule": "6.4.2.5"
    },
    {
        "Description": "\nUser-Agent\nYes\nRFC 2616, Section 14.43\nRequired for tracing product tokens and their version.  Multiple product tokens may be listed.\n",
        "Rule": "6.4.2.5"
    },
    {
        "Rule": "6.4.2.6"
    },
    {
        "Description": "\nHost\nYes\nRFC 2616, Section 14.23\nRequired to allow support of multiple origin hosts at a single IP address.\n",
        "Rule": "6.4.2.6"
    },
    {
        "Rule": "6.4.4"
    },
    {
        "Rule": "0.0.0"
    },
    {
        "Rule": "6.1.0"
    },
    {
        "Description": "All the URI's that are not valid should return 404 which is method not found.",
        "Rule": "6.1.0",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.1"
    },
    {
        "Description": "A Redfish interface shall be exposed through a web service endpoint implemented using Hypertext Transfer Protocols, version 1.1 (RFCL616).",
        "Rule": "6.1.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.2"
    },
    {
        "Description": "Each unique instance of a resource shall be identified by a URI; thus a URI cannot reference multiple resources though it may reference a single collection resource.",
        "Rule": "6.1.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.6"
    },
    {
        "Description": "The unique identifier part of a URI shall be unique within the implementation.",
        "Rule": "6.1.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.7"
    },
    {
        "Description": "URIs, as described in RFCL986, may also contain a query (?query) and a frag (#frag) components.  Queries are addressed in the section Query Parameters.  Fragments (frag) shall be ignored by the server when used as the URI for submitting an operation.",
        "Rule": "6.1.7",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.1"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.1.8.1"
    },
    {
        "Rule": "6.1.8.1.1"
    },
    {
        "Description": "The service shall set the Location header to the URI of the newly created resource.   ",
        "Rule": "6.1.8.1.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.1.2"
    },
    {
        "Description": "It may include a response body containing the representation of the newly created resource",
        "Rule": "6.1.8.1.2",
        "Status": "PASS"
    },
    {
        "Description": "\nPOST\nObject create, Object action, Eventing\nYes\n",
        "Rule": "6.1.8.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.2"
    },
    {
        "Description": "\nGET\nObject or Collection retrieval\nYes\n",
        "Rule": "6.1.8.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.3"
    },
    {
        "Comment": "~ note: PATCH could not be verified",
        "Rule": "6.1.8.3"
    },
    {
        "Description": "\nPATCH\nObject update\nYes\n",
        "Rule": "6.1.8.3",
        "Status": "WARN"
    },
    {
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': '********'}",
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "DEBUG response headers: Location: /redfish/v1/Sessions/23; X-Auth-Token: d72d038fbb32d9b618c6c69c7fb42030",
        "Rule": "6.1.8.4"
    },
    {
        "Description": "\nDELETE\nObject delete\nYes\n",
        "Rule": "6.1.8.4",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.9"
    },
    {
        "Description": "<PUT and HEAD may be also be supported> - Other HTTP methods are not allowed and shall receive a 405 response.",
        "Rule": "6.1.9",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.11"
    },
    {
        "Description": "All resources shall be made available using the JSON media type\n  \"application/json\".",
        "Rule": "6.1.11",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.12"
    },
    {
        "Description": "Redfish services shall make every resource available in a representation based on JSON, as specified in RFC4627. Receivers shall not reject a message because it is encoded in JSON, and shall offer at least one response representation based on JSON.",
        "Rule": "6.1.12",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.13"
    },
    {
        "Comment": "~ GET:/redfish/v1/Managers/iDRAC.Embedded.1/LogServices failed : HTTP status 200:OK, Expected statuses: [406]",
        "Rule": "6.1.13"
    },
    {
        "Comment": "200:OK is also an acceptable status",
        "Rule": "6.1.13"
    },
    {
        "Description": "Clients may request compression by specifying an Accept-Encoding header in the request.\n Responses to GET requests shall only be compressed if requested by the client.\n\n Services should support gzip compression when requested by the client.",
        "Rule": "6.1.13",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.14"
    },
    {
        "Description": "Implementations should support returning ETag headers for each response that represents a single resource.  Implementations shall support returning ETag headers for certain requests and responses as listed in the Security section.",
        "Rule": "6.1.14",
        "Status": "WARN"
    },
    {
        "Rule": "6.2.3"
    },
    {
        "Description": "A GET on the resource \"/redfish\" shall return the following body:\njson { \"v1\": \"/redfish/v1/\" } ",
        "Rule": "6.2.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/ : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/odata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Description": "Redfish is a hypermedia API with a small set of defined URIs.  All other resources are accessible via opaque URIs referenced from the root service.  The following Redfish-defined URIs shall be supported by a Redfish service:\n\n/redfish The URI that is used to return the version \n/redfish/v1/ The URI for the Redfish Service Root \n/redfish/v1/odata The URI for the Redfish OData Service Document \n/redfish/v1/$metadata The URI for the Redfish Metadata Document ",
        "Rule": "6.3.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.2"
    },
    {
        "Description": "In addition, the following URI without a trailing slash shall be either Redirected to the Associated Redfish-defined URI shown in the table below or else shall be treated by the service as the equivalent URI to the associated Redfish-defined URI:\n\n/redfish/v1     /redfish/v1/ ",
        "Rule": "6.3.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.3"
    },
    {
        "Description": "All relative URIs used by the service shall start with a double forward slash (\"//\") and include the authority (e.g. //mgmt.vendor.com/redfish/v1/Systems) or a single forward slash (\"/\") and include the absolute-path (e.g. /redfish/v1/Systems).",
        "Rule": "6.3.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.1"
    },
    {
        "Description": "Redfish services shall understand and be able to process the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"Yes\".",
        "Rule": "6.4.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata with Accept type 'application/xml'",
        "Rule": "6.4.2.1"
    },
    {
        "Description": "\nAccept\nYes\nRFC 2616, Section 14.1\nIndicates to the server what media type(s) this client is prepared to accept. application/json shall be supported for requesting resources and application/xml shall be supported for requesting metadata.\n",
        "Rule": "6.4.2.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'} and wihtout content type in request headers",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "1st POST returned status 415",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST (/redfish/v1/Sessions) WITH the required header Content-Type : application/json; charset=utf-8 and request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "2nd POST returned status 201",
        "Rule": "6.4.2.2"
    },
    {
        "Description": "\nContent-Type\nConditional\nRFC 2616, Section 14.17\nDescribes the type of representation used in the message body.  charset=utf-8 shall be supported for requests that have a body.  Shall be required if there is a request body.\n",
        "Rule": "6.4.2.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.3"
    },
    {
        "Comment": "~ GET: /redfish/v1/Managers/iDRAC.Embedded.1/LogServices HTTP status 200:OK with request header: OData-Version and incorrect value: 3.0 passed, which is an unexpected behavior",
        "Rule": "6.4.2.3"
    },
    {
        "Description": "\nOData-Version\nYes\n4.0\nServices shall reject requests which specify an unsupported OData version.\n",
        "Rule": "6.4.2.3",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.2.4"
    },
    {
        "Description": "\nAuthorization\nconditional\n4.0\nRequired for [Basic Authorization\n",
        "Rule": "6.4.2.4",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.5"
    },
    {
        "Description": "\nUser-Agent\nYes\nRFC 2616, Section 14.43\nRequired for tracing product tokens and their version.  Multiple product tokens may be listed.\n",
        "Rule": "6.4.2.5",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.6"
    },
    {
        "Description": "\nHost\nYes\nRFC 2616, Section 14.23\nRequired to allow support of multiple origin hosts at a single IP address.\n",
        "Rule": "6.4.2.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.4"
    },
    {
        "Rule": "0.0.0"
    },
    {
        "Rule": "6.1.0"
    },
    {
        "Description": "All the URI's that are not valid should return 404 which is method not found.",
        "Rule": "6.1.0",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.1"
    },
    {
        "Description": "A Redfish interface shall be exposed through a web service endpoint implemented using Hypertext Transfer Protocols, version 1.1 (RFCL616).",
        "Rule": "6.1.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.2"
    },
    {
        "Description": "Each unique instance of a resource shall be identified by a URI; thus a URI cannot reference multiple resources though it may reference a single collection resource.",
        "Rule": "6.1.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.6"
    },
    {
        "Description": "The unique identifier part of a URI shall be unique within the implementation.",
        "Rule": "6.1.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.7"
    },
    {
        "Description": "URIs, as described in RFCL986, may also contain a query (?query) and a frag (#frag) components.  Queries are addressed in the section Query Parameters.  Fragments (frag) shall be ignored by the server when used as the URI for submitting an operation.",
        "Rule": "6.1.7",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.1"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.1.8.1"
    },
    {
        "Comment": "~ POST:/redfish/v1/Sessions failed : HTTP status 503:Service Unavailable, Expected statuses: [201]",
        "Rule": "6.1.8.1"
    },
    {
        "Description": "\nPOST\nObject create, Object action, Eventing\nYes\n",
        "Rule": "6.1.8.1",
        "Status": "FAIL"
    },
    {
        "Rule": "6.1.8.2"
    },
    {
        "Description": "\nGET\nObject or Collection retrieval\nYes\n",
        "Rule": "6.1.8.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.3"
    },
    {
        "Comment": "~ note: PATCH could not be verified",
        "Rule": "6.1.8.3"
    },
    {
        "Description": "\nPATCH\nObject update\nYes\n",
        "Rule": "6.1.8.3",
        "Status": "WARN"
    },
    {
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': '********'}",
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "~ POST:/redfish/v1/Sessions failed : HTTP status 503:Service Unavailable, Expected statuses: [201]",
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "Response body from failed POST: b'\\r\\nRAC0218: The maximum number of user sessions is reached'",
        "Rule": "6.1.8.4"
    },
    {
        "Description": "\nDELETE\nObject delete\nYes\n",
        "Rule": "6.1.8.4",
        "Status": "FAIL"
    },
    {
        "Rule": "6.1.9"
    },
    {
        "Description": "<PUT and HEAD may be also be supported> - Other HTTP methods are not allowed and shall receive a 405 response.",
        "Rule": "6.1.9",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.11"
    },
    {
        "Description": "All resources shall be made available using the JSON media type\n  \"application/json\".",
        "Rule": "6.1.11",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.12"
    },
    {
        "Description": "Redfish services shall make every resource available in a representation based on JSON, as specified in RFC4627. Receivers shall not reject a message because it is encoded in JSON, and shall offer at least one response representation based on JSON.",
        "Rule": "6.1.12",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.13"
    },
    {
        "Comment": "~ GET:/redfish/v1/Managers/iDRAC.Embedded.1/Jobs/JID_997228779393 failed : HTTP status 200:OK, Expected statuses: [406]",
        "Rule": "6.1.13"
    },
    {
        "Comment": "200:OK is also an acceptable status",
        "Rule": "6.1.13"
    },
    {
        "Description": "Clients may request compression by specifying an Accept-Encoding header in the request.\n Responses to GET requests shall only be compressed if requested by the client.\n\n Services should support gzip compression when requested by the client.",
        "Rule": "6.1.13",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.14"
    },
    {
        "Description": "Implementations should support returning ETag headers for each response that represents a single resource.  Implementations shall support returning ETag headers for certain requests and responses as listed in the Security section.",
        "Rule": "6.1.14",
        "Status": "WARN"
    },
    {
        "Rule": "6.2.3"
    },
    {
        "Description": "A GET on the resource \"/redfish\" shall return the following body:\njson { \"v1\": \"/redfish/v1/\" } ",
        "Rule": "6.2.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/ : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/odata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Description": "Redfish is a hypermedia API with a small set of defined URIs.  All other resources are accessible via opaque URIs referenced from the root service.  The following Redfish-defined URIs shall be supported by a Redfish service:\n\n/redfish The URI that is used to return the version \n/redfish/v1/ The URI for the Redfish Service Root \n/redfish/v1/odata The URI for the Redfish OData Service Document \n/redfish/v1/$metadata The URI for the Redfish Metadata Document ",
        "Rule": "6.3.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.2"
    },
    {
        "Description": "In addition, the following URI without a trailing slash shall be either Redirected to the Associated Redfish-defined URI shown in the table below or else shall be treated by the service as the equivalent URI to the associated Redfish-defined URI:\n\n/redfish/v1     /redfish/v1/ ",
        "Rule": "6.3.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.3"
    },
    {
        "Description": "All relative URIs used by the service shall start with a double forward slash (\"//\") and include the authority (e.g. //mgmt.vendor.com/redfish/v1/Systems) or a single forward slash (\"/\") and include the absolute-path (e.g. /redfish/v1/Systems).",
        "Rule": "6.3.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.1"
    },
    {
        "Description": "Redfish services shall understand and be able to process the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"Yes\".",
        "Rule": "6.4.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata with Accept type 'application/xml'",
        "Rule": "6.4.2.1"
    },
    {
        "Description": "\nAccept\nYes\nRFC 2616, Section 14.1\nIndicates to the server what media type(s) this client is prepared to accept. application/json shall be supported for requesting resources and application/xml shall be supported for requesting metadata.\n",
        "Rule": "6.4.2.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'} and wihtout content type in request headers",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "1st POST returned status 503",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST (/redfish/v1/Sessions) WITH the required header Content-Type : application/json; charset=utf-8 and request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "2nd POST returned status 503",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "~ POST:/redfish/v1/Sessions failed : HTTP status 503:Service Unavailable, Expected statuses: [201]",
        "Rule": "6.4.2.2"
    },
    {
        "Description": "\nContent-Type\nConditional\nRFC 2616, Section 14.17\nDescribes the type of representation used in the message body.  charset=utf-8 shall be supported for requests that have a body.  Shall be required if there is a request body.\n",
        "Rule": "6.4.2.2",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.2.3"
    },
    {
        "Comment": "~ GET: /redfish/v1/Managers/iDRAC.Embedded.1/Jobs/JID_997228779393 HTTP status 200:OK with request header: OData-Version and incorrect value: 3.0 passed, which is an unexpected behavior",
        "Rule": "6.4.2.3"
    },
    {
        "Description": "\nOData-Version\nYes\n4.0\nServices shall reject requests which specify an unsupported OData version.\n",
        "Rule": "6.4.2.3",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.2.4"
    },
    {
        "Description": "\nAuthorization\nconditional\n4.0\nRequired for [Basic Authorization\n",
        "Rule": "6.4.2.4",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.5"
    },
    {
        "Description": "\nUser-Agent\nYes\nRFC 2616, Section 14.43\nRequired for tracing product tokens and their version.  Multiple product tokens may be listed.\n",
        "Rule": "6.4.2.5",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.6"
    },
    {
        "Description": "\nHost\nYes\nRFC 2616, Section 14.23\nRequired to allow support of multiple origin hosts at a single IP address.\n",
        "Rule": "6.4.2.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.4"
    },
    {
        "Rule": "0.0.0"
    },
    {
        "Rule": "6.1.0"
    },
    {
        "Description": "All the URI's that are not valid should return 404 which is method not found.",
        "Rule": "6.1.0",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.1"
    },
    {
        "Description": "A Redfish interface shall be exposed through a web service endpoint implemented using Hypertext Transfer Protocols, version 1.1 (RFCL616).",
        "Rule": "6.1.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.2"
    },
    {
        "Description": "Each unique instance of a resource shall be identified by a URI; thus a URI cannot reference multiple resources though it may reference a single collection resource.",
        "Rule": "6.1.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.6"
    },
    {
        "Description": "The unique identifier part of a URI shall be unique within the implementation.",
        "Rule": "6.1.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.7"
    },
    {
        "Description": "URIs, as described in RFCL986, may also contain a query (?query) and a frag (#frag) components.  Queries are addressed in the section Query Parameters.  Fragments (frag) shall be ignored by the server when used as the URI for submitting an operation.",
        "Rule": "6.1.7",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.1"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.1.8.1"
    },
    {
        "Rule": "6.1.8.1.1"
    },
    {
        "Description": "The service shall set the Location header to the URI of the newly created resource.   ",
        "Rule": "6.1.8.1.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.1.2"
    },
    {
        "Description": "It may include a response body containing the representation of the newly created resource",
        "Rule": "6.1.8.1.2",
        "Status": "PASS"
    },
    {
        "Description": "\nPOST\nObject create, Object action, Eventing\nYes\n",
        "Rule": "6.1.8.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.2"
    },
    {
        "Description": "\nGET\nObject or Collection retrieval\nYes\n",
        "Rule": "6.1.8.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.8.3"
    },
    {
        "Comment": "~ note: PATCH could not be verified",
        "Rule": "6.1.8.3"
    },
    {
        "Description": "\nPATCH\nObject update\nYes\n",
        "Rule": "6.1.8.3",
        "Status": "WARN"
    },
    {
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': '********'}",
        "Rule": "6.1.8.4"
    },
    {
        "Comment": "DEBUG response headers: Location: /redfish/v1/Sessions/26; X-Auth-Token: b72ba74cf894c11953ad0f24dfa4167b",
        "Rule": "6.1.8.4"
    },
    {
        "Description": "\nDELETE\nObject delete\nYes\n",
        "Rule": "6.1.8.4",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.9"
    },
    {
        "Description": "<PUT and HEAD may be also be supported> - Other HTTP methods are not allowed and shall receive a 405 response.",
        "Rule": "6.1.9",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.11"
    },
    {
        "Description": "All resources shall be made available using the JSON media type\n  \"application/json\".",
        "Rule": "6.1.11",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.12"
    },
    {
        "Description": "Redfish services shall make every resource available in a representation based on JSON, as specified in RFC4627. Receivers shall not reject a message because it is encoded in JSON, and shall offer at least one response representation based on JSON.",
        "Rule": "6.1.12",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.13"
    },
    {
        "Comment": "~ GET:/redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG failed : HTTP status 200:OK, Expected statuses: [406]",
        "Rule": "6.1.13"
    },
    {
        "Comment": "200:OK is also an acceptable status",
        "Rule": "6.1.13"
    },
    {
        "Description": "Clients may request compression by specifying an Accept-Encoding header in the request.\n Responses to GET requests shall only be compressed if requested by the client.\n\n Services should support gzip compression when requested by the client.",
        "Rule": "6.1.13",
        "Status": "PASS"
    },
    {
        "Rule": "6.1.14"
    },
    {
        "Description": "Implementations should support returning ETag headers for each response that represents a single resource.  Implementations shall support returning ETag headers for certain requests and responses as listed in the Security section.",
        "Rule": "6.1.14",
        "Status": "WARN"
    },
    {
        "Rule": "6.2.3"
    },
    {
        "Description": "A GET on the resource \"/redfish\" shall return the following body:\njson { \"v1\": \"/redfish/v1/\" } ",
        "Rule": "6.2.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/ : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/odata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata : HTTP status 200:OK",
        "Rule": "6.3.1"
    },
    {
        "Description": "Redfish is a hypermedia API with a small set of defined URIs.  All other resources are accessible via opaque URIs referenced from the root service.  The following Redfish-defined URIs shall be supported by a Redfish service:\n\n/redfish The URI that is used to return the version \n/redfish/v1/ The URI for the Redfish Service Root \n/redfish/v1/odata The URI for the Redfish OData Service Document \n/redfish/v1/$metadata The URI for the Redfish Metadata Document ",
        "Rule": "6.3.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.2"
    },
    {
        "Description": "In addition, the following URI without a trailing slash shall be either Redirected to the Associated Redfish-defined URI shown in the table below or else shall be treated by the service as the equivalent URI to the associated Redfish-defined URI:\n\n/redfish/v1     /redfish/v1/ ",
        "Rule": "6.3.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.3.3"
    },
    {
        "Description": "All relative URIs used by the service shall start with a double forward slash (\"//\") and include the authority (e.g. //mgmt.vendor.com/redfish/v1/Systems) or a single forward slash (\"/\") and include the absolute-path (e.g. /redfish/v1/Systems).",
        "Rule": "6.3.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.1"
    },
    {
        "Description": "Redfish services shall understand and be able to process the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"Yes\".",
        "Rule": "6.4.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.1"
    },
    {
        "Comment": "~ GET /redfish/v1/$metadata with Accept type 'application/xml'",
        "Rule": "6.4.2.1"
    },
    {
        "Description": "\nAccept\nYes\nRFC 2616, Section 14.1\nIndicates to the server what media type(s) this client is prepared to accept. application/json shall be supported for requesting resources and application/xml shall be supported for requesting metadata.\n",
        "Rule": "6.4.2.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'} and wihtout content type in request headers",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "1st POST returned status 415",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "Requesting POST (/redfish/v1/Sessions) WITH the required header Content-Type : application/json; charset=utf-8 and request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.4.2.2"
    },
    {
        "Comment": "2nd POST returned status 201",
        "Rule": "6.4.2.2"
    },
    {
        "Description": "\nContent-Type\nConditional\nRFC 2616, Section 14.17\nDescribes the type of representation used in the message body.  charset=utf-8 shall be supported for requests that have a body.  Shall be required if there is a request body.\n",
        "Rule": "6.4.2.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.3"
    },
    {
        "Comment": "~ GET: /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG HTTP status 200:OK with request header: OData-Version and incorrect value: 3.0 passed, which is an unexpected behavior",
        "Rule": "6.4.2.3"
    },
    {
        "Description": "\nOData-Version\nYes\n4.0\nServices shall reject requests which specify an unsupported OData version.\n",
        "Rule": "6.4.2.3",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.2.4"
    },
    {
        "Description": "\nAuthorization\nconditional\n4.0\nRequired for [Basic Authorization\n",
        "Rule": "6.4.2.4",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.5"
    },
    {
        "Description": "\nUser-Agent\nYes\nRFC 2616, Section 14.43\nRequired for tracing product tokens and their version.  Multiple product tokens may be listed.\n",
        "Rule": "6.4.2.5",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.2.6"
    },
    {
        "Description": "\nHost\nYes\nRFC 2616, Section 14.23\nRequired to allow support of multiple origin hosts at a single IP address.\n",
        "Rule": "6.4.2.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.4"
    },
    {
        "Comment": "~ GET:/redfish/v1/Managers/iDRAC.Embedded.1/VirtualMedia failed : HTTP status 403:Forbidden, Expected statuses: [200]",
        "Rule": "6.4.4"
    },
    {
        "Description": "The HTTP GET method shall be used to retrieve a resource without causing any side effects.",
        "Rule": "6.4.4",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.5"
    },
    {
        "Description": "The service shall ignore the content of the body on a GET.",
        "Rule": "6.4.5",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.13"
    },
    {
        "Description": "Implementation shall return the 501, Not Implemented, status code for any query parameters starting with \"$\" that are not supported, and should return an extended error indicating the requested query parameter(s) not supported for this resource.",
        "Rule": "6.4.13",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.14"
    },
    {
        "Description": "Implementations shall ignore unknown or unsupported query parameters that do not begin with \"$\".",
        "Rule": "6.4.14",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.16"
    },
    {
        "Description": "Retrieved collections shall always include the count property to specify the total number of members in the collection.",
        "Rule": "6.4.16",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.18"
    },
    {
        "Description": "The HEAD method differs from the GET method in that it MUST NOT return message body information.  However, all of the same meta information and status codes in the HTTP headers will be returned as though a GET method were processed, including authorization checks.",
        "Rule": "6.4.18",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.21"
    },
    {
        "Comment": "~ note: Etag exepcted in headers of /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG: {\n  \"access-control-allow-origin\": \"*\",\n  \"cache-control\": \"no-cache\",\n  \"content-length\": \"719\",\n  \"content-type\": \"application/json;odata.metadata=minimal;charset=utf-8\",\n  \"date\": \"Tue, 28 Aug 2018 05:36:26 GMT\",\n  \"link\": \"</redfish/v1/Schemas/Power.v1_0_2.json>;rel=describedby\",\n  \"odata-version\": \"4.0\",\n  \"server\": \"Apache/2.4\",\n  \"x-frame-options\": \"DENY\"\n} ~ not found",
        "Rule": "6.4.21"
    },
    {
        "Comment": "~ note: Modifications to resource using If-None-Match header without Etag cannot be tested",
        "Rule": "6.4.21"
    },
    {
        "Description": "Clients create, modify, and delete resources by issuing the appropriate Create, Update, Replace or Delete operation, or by invoking an Action on the resource. Services return a status code 405 if the specified resource exists but does not support the requested operation. ",
        "Rule": "6.4.21",
        "Status": "WARN"
    },
    {
        "Rule": "6.4.23"
    },
    {
        "Description": "Services shall support the PATCH method to update a resource. If the resource can never be updated, status code 405 shall be returned.",
        "Rule": "6.4.23",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.24"
    },
    {
        "Description": "If a property in the request can never be updated, such as when a property is read only, a status code of 200 shall be returned along with a representation of the resource containing an annotation specifying the non-updatable property. In this success case, other properties may be updated in the resource.",
        "Rule": "6.4.24",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.25"
    },
    {
        "Comment": "~ note: Etag exepcted in headers of /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG:{\n  \"access-control-allow-origin\": \"*\",\n  \"cache-control\": \"no-cache\",\n  \"content-length\": \"719\",\n  \"content-type\": \"application/json;odata.metadata=minimal;charset=utf-8\",\n  \"date\": \"Tue, 28 Aug 2018 05:36:26 GMT\",\n  \"link\": \"</redfish/v1/Schemas/Power.v1_0_2.json>;rel=describedby\",\n  \"odata-version\": \"4.0\",\n  \"server\": \"Apache/2.4\",\n  \"x-frame-options\": \"DENY\"\n} ~ not found",
        "Rule": "6.4.25"
    },
    {
        "Comment": "~ note: Modifications to resource using If-None-Match header without Etag cannot be tested",
        "Rule": "6.4.25"
    },
    {
        "Description": "Services may support the PUT method to replace a resource in whole.  If a service does not implement this method, status code 405 shall be returned.",
        "Rule": "6.4.25",
        "Status": "WARN"
    },
    {
        "Rule": "6.4.26"
    },
    {
        "Comment": "status from POST is 400",
        "Rule": "6.4.26"
    },
    {
        "Comment": "~ POST:/redfish/v1/Sessions/Members failed : HTTP status 400:Bad Request, Expected statuses: [200, 201, 202, 204]",
        "Rule": "6.4.26"
    },
    {
        "Description": "Submitting a POST request to a resource representing a collection is equivalent to submitting the same request to the Members property of that resource. Services that support adding members to a collection shall support both forms.",
        "Rule": "6.4.26",
        "Status": "FAIL"
    },
    {
        "Rule": "6.4.27"
    },
    {
        "Comment": "/redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG does not support creating resources. Received status 405 from POST",
        "Rule": "6.4.27"
    },
    {
        "Description": "Services shall support the POST method for creating resources. If the resource does not offer anything to be created, a status code 405 shall be returned.",
        "Rule": "6.4.27",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.30"
    },
    {
        "Description": "Services shall support the DELETE method for resources that can be deleted. If the resource can never be deleted, status code 405 shall be returned.",
        "Rule": "6.4.30",
        "Status": "PASS"
    },
    {
        "Rule": "6.4.32"
    },
    {
        "Comment": "Action target /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset found",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset",
        "Rule": "6.4.32"
    },
    {
        "Comment": "~ POST:/redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset warning : HTTP status 409:Conflict, Expected statuses: [200, 201, 202, 204]",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Response from POST: {'error': {'@Message.ExtendedInfo': [{'Message': 'Server is already powered ON.', 'MessageArgs': [], 'MessageArgs@odata.count': 0, 'MessageId': 'iDRAC.1.6.PSU501', 'RelatedProperties': [], 'RelatedProperties@odata.count': 0, 'Resolution': 'No response action is required.', 'Severity': 'Informational'}], 'code': 'Base.1.0.GeneralError', 'message': 'A general error has occurred. See ExtendedInfo for more information'}}",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Response headers: {'date': 'Tue, 28 Aug 2018 05:37:25 GMT', 'server': 'Apache/2.4', 'odata-version': '4.0', 'access-control-allow-origin': '*', 'cache-control': 'no-cache', 'x-frame-options': 'DENY', 'content-length': '400', 'content-type': 'application/json;odata.metadata=minimal;charset=utf-8'}",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Warning: POST on action uri /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset returned status 409",
        "Rule": "6.4.32"
    },
    {
        "Description": "Custom actions are requested on a resource by sending the HTTP POST method to the URI of the action. If the actions property within a resource does not specify a target property, then the URI of an action shall be of the form:\n\nResourceUri/Actions/QualifiedActionName",
        "Rule": "6.4.32",
        "Status": "WARN"
    },
    {
        "Rule": "6.4.31"
    },
    {
        "Comment": "Action target /redfish/v1/Managers/iDRAC.Embedded.1/LogServices/Sel/Actions/LogService.ClearLog found",
        "Rule": "6.4.31"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Managers/iDRAC.Embedded.1/LogServices/Sel/Actions/LogService.ClearLog with request body {'Action': 'ClearLog'}",
        "Rule": "6.4.31"
    },
    {
        "Comment": "Could not find any action with target in resource /redfish/v1/Managers/iDRAC.Embedded.1/LogServices/Lclog",
        "Rule": "6.4.31"
    },
    {
        "Description": "Services shall support the POST method for sending actions.",
        "Rule": "6.4.31",
        "Status": "WARN"
    },
    {
        "Rule": "6.4.32"
    },
    {
        "Comment": "Action target /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset found",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Requesting POST on resource /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset",
        "Rule": "6.4.32"
    },
    {
        "Comment": "~ POST:/redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset warning : HTTP status 409:Conflict, Expected statuses: [200, 201, 202, 204]",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Response from POST: {'error': {'@Message.ExtendedInfo': [{'Message': 'Server is already powered ON.', 'MessageArgs': [], 'MessageArgs@odata.count': 0, 'MessageId': 'iDRAC.1.6.PSU501', 'RelatedProperties': [], 'RelatedProperties@odata.count': 0, 'Resolution': 'No response action is required.', 'Severity': 'Informational'}], 'code': 'Base.1.0.GeneralError', 'message': 'A general error has occurred. See ExtendedInfo for more information'}}",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Response headers: {'date': 'Tue, 28 Aug 2018 05:37:31 GMT', 'server': 'Apache/2.4', 'odata-version': '4.0', 'access-control-allow-origin': '*', 'cache-control': 'no-cache', 'x-frame-options': 'DENY', 'content-length': '400', 'content-type': 'application/json;odata.metadata=minimal;charset=utf-8'}",
        "Rule": "6.4.32"
    },
    {
        "Comment": "Warning: POST on action uri /redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset returned status 409",
        "Rule": "6.4.32"
    },
    {
        "Description": "Custom actions are requested on a resource by sending the HTTP POST method to the URI of the action. If the actions property within a resource does not specify a target property, then the URI of an action shall be of the form:\n\nResourceUri/Actions/QualifiedActionName",
        "Rule": "6.4.32",
        "Status": "WARN"
    },
    {
        "Rule": "6.5.1"
    },
    {
        "Comment": "Note: header[content-length] found in response header of resource /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG",
        "Rule": "6.5.1"
    },
    {
        "Comment": "Note: header[access-control-allow-origin] found in response header of resource /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG",
        "Rule": "6.5.1"
    },
    {
        "Comment": "Note: header[date] not listed in Redfish spec but found in response header of resource /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG",
        "Rule": "6.5.1"
    },
    {
        "Comment": "Note: header[x-frame-options] not listed in Redfish spec but found in response header of resource /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG",
        "Rule": "6.5.1"
    },
    {
        "Description": "Redfish services shall be able to return the headers in the following table as defined by the HTTP 1.1 specification if the value in the Required column is set to \"yes\" .",
        "Rule": "6.5.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.2.6"
    },
    {
        "Comment": "Requesting POST for resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.5.2.6"
    },
    {
        "Description": "\nLocation\nConditional\nRFC 2616, Section 14.30\nIndicates a URI that can be used to request a representation of the resource.  Shall be returned if a new resource was created.  Location and X-Auth-Token shall be included on responses which create user sessions.\n",
        "Rule": "6.5.2.6",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.2.6.1"
    },
    {
        "Comment": "Requesting POST for resource /redfish/v1/Sessions with request body {'UserName': 'root', 'Password': 'redfish'}",
        "Rule": "6.5.2.6.1"
    },
    {
        "Description": " ",
        "Rule": "6.5.2.6.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.3"
    },
    {
        "Description": "The Link header provides metadata information on the\naccessed resource in response to a HEAD or GET operation. In addition to\nlinks from the resource, the URL of the JSON schema for the resource shall be\nreturned with a rel=describedby. ",
        "Rule": "6.5.3",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.6.2"
    },
    {
        "Description": "\n200 OK\nThe request was successfully completed and includes a representation in its body.\n",
        "Rule": "6.5.6.2",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.6.3"
    },
    {
        "Rule": "6.5.6.5"
    },
    {
        "Description": "\n204 No Content\nThe request succeeded, but no content is being returned in the body of the response.\n",
        "Rule": "6.5.6.5",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.6.6"
    },
    {
        "Comment": "Unable to verify 301 Moved Permanently behavior. No 301 response status returned.",
        "Rule": "6.5.6.6"
    },
    {
        "Description": "\n301 Moved Permanently \nThe requested resource resides under a different URI\n",
        "Rule": "6.5.6.6",
        "Status": "PASS (Incomplete). Check Log for details"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Rule": "6.5.6.8"
    },
    {
        "Description": "\n304 Not Modified\nThe service has performed a conditional GET request where access is allowed, but the resource content has not changed. Conditional requests are initiated using the headers If-Modified-Since and/or If-None-Match (see HTTP 1.1, sections 14.25 and 14.26) to save network bandwidth if there is no change.\n",
        "Rule": "6.5.6.8",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.6.9"
    },
    {
        "Comment": "Requesting POST for resource /redfish/v1/Sessions with request body {'Foo': 1, 'Bar': 2}",
        "Rule": "6.5.6.9"
    },
    {
        "Comment": "Status: 400; Message body: b'<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\\n<html><head>\\n<title>400 Unknown Reason</title>\\n</head><body>\\n<h1>Unknown Reason</h1>\\n<p>Your browser sent a request that this server could not understand.<br />\\n</p>\\n</body></html>\\n'",
        "Rule": "6.5.6.9"
    },
    {
        "Comment": "~ note: no JSON payload found in response body",
        "Rule": "6.5.6.9"
    },
    {
        "Comment": "~ note: 400 response did not include extended error in the body",
        "Rule": "6.5.6.9"
    },
    {
        "Description": "\n400 Bad Request\nThe request could not be processed because it contains missing or invalid information (such as validation error on an input field, a missing required value, and so on). An extended error shall be returned in the response body, as defined in section Extended Error Handling.\n",
        "Rule": "6.5.6.9",
        "Status": "FAIL"
    },
    {
        "Rule": "6.5.6.10"
    },
    {
        "Comment": "Requesting GET /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG without header authorization... ",
        "Rule": "6.5.6.10"
    },
    {
        "Comment": "~ GET:/redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG failed : HTTP status 200:OK, Expected statuses: [401]",
        "Rule": "6.5.6.10"
    },
    {
        "Comment": "Requesting GET /redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG with invalid credentials for header authorization... ",
        "Rule": "6.5.6.10"
    },
    {
        "Comment": "~ GET:/redfish/v1/Chassis/System.Embedded.1/Sensors/Voltages/iDRAC.Embedded.1%23CPU1MEM012VPPPG failed : HTTP status 200:OK, Expected statuses: [401]",
        "Rule": "6.5.6.10"
    },
    {
        "Description": "\n401 Unauthorized \nThe authentication credentials included with this request are missing or invalid\n",
        "Rule": "6.5.6.10",
        "Status": "FAIL"
    },
    {
        "Rule": "6.5.8"
    },
    {
        "Comment": "In the metadadata document, included Namespace RedfishExtensions.v1_0_0 is missing the required Redfish Alias",
        "Rule": "6.5.8"
    },
    {
        "Description": "The service metadata shall include the namespaces for each of the Redfish resource types, along with the \"RedfishExtensions.1.0.0\" namespace. These references may use the standard Uri for the hosted Redfish Schema definitions (i.e., on http://redfish.dmtf.org/schema) or a Url to a local version of the Redfish Schema that shall be identical to the hosted version.",
        "Rule": "6.5.8",
        "Status": "FAIL"
    },
    {
        "Rule": "6.5.9"
    },
    {
        "Description": "The service metadata shall include an entity container that defines the top level resources and Resource\nCollections. An implementation may extend the ServiceContainer defined in the ServiceRoot.v1_0_0\nschema and may include additional resources.",
        "Rule": "6.5.9",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.10"
    },
    {
        "Description": "The OData Service Document shall be returned as a JSON object, using the MIME type application/json.",
        "Rule": "6.5.10",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.11"
    },
    {
        "Description": "The JSON object shall contain a context property named \"@odata.context\" with a value of \"/redfish/v1/$metadata\". This context tells a generic OData client how to find the service metadata describing the types exposed by the service.",
        "Rule": "6.5.11",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.12"
    },
    {
        "Description": "The JSON object shall include a property named \"value\" whose value is a JSON array containing an entry for the service root and each resource that is a direct child of the service root.",
        "Rule": "6.5.12",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.13"
    },
    {
        "Description": "Each entry shall be represented as a JSON object and shall include a \"name\" property whose value is a user-friendly name of the resource, a \"kind\" property whose value is \"Singleton\" for individual resources (including collection resources) or \"EntitySet\" for top-level resource collections, and a \"url\" property whose value is the relative URL for the top-level resource.",
        "Rule": "6.5.13",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.14"
    },
    {
        "Description": "Responses that represent a single resource shall contain a context property named \"@odata.context\" describing the source of the payload. The value of the context property shall be the context URL that describes the resource according to OData-Protocol.",
        "Rule": "6.5.14",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.17"
    },
    {
        "Description": "Resources in a response shall include a unique identifier property named \"@odata.id\". The value of the identifier property shall be the unique identifier for the resource.",
        "Rule": "6.5.17",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.18"
    },
    {
        "Description": "Resources identifiers shall be represented in JSON payloads as strings that conform to the rules for URI paths as defined in Section 3.3, Path of RFCL986.",
        "Rule": "6.5.18",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.20"
    },
    {
        "Description": "Primitive properties shall be returned as JSON values according to the following table.\n\nType    JSON Representation\n\nEdm.Boolean     Boolean \nEdm.DateTimeOffset    String, formatted as specified in DateTime Values \nEdm.Decimal     Number, optionally containing a decimal point \nEdm.Double     Number, optionally containing a decimal point and optionally containing an exponent \nEdm.Guid     String, matching the pattern ([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}) \nEdm.Int64     Number with no decimal point \nEdm.String     String \n",
        "Rule": "6.5.20",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.21"
    },
    {
        "Description": "DateTime values shall be returned as JSON strings according to the ISO 8601 \"extended\" format, with time offset or UTC suffix included, of the form:\nYYYY-MM-DD T hh:mm:ss[.SSS] (Z | (+ | - ) hh:mm)",
        "Rule": "6.5.21",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.23"
    },
    {
        "Description": "Collection-valued properties may contain a subset of the members of the full collection. In this case, the collection-valued property shall be annotated with a next link property. The property representing the next link shall be a peer of the collection-valued property, with the name of the collection-valued property suffixed with \"@odata.nextLink\". . The value of the next link property shall be an opaque URL that the client can use to retrieve the next set of collection members",
        "Rule": "6.5.23",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.23.1"
    },
    {
        "Description": "The next link property shall only be present if the number of resources requested is greater than the number of resources returned.",
        "Rule": "6.5.23.1",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.24"
    },
    {
        "Description": "Collection-valued properties shall be annotated with a count. The property representing the count is a peer of the collection-valued property, with the name of the collection-valued property suffixed with \"Members@odata.count\". The value of the count is the total number of members available in the collection.",
        "Rule": "6.5.24",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.25"
    },
    {
        "Description": "Collection-valued properties shall not be null. Empty collections shall be returned in JSON as an empty array.",
        "Rule": "6.5.25",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.26"
    },
    {
        "Description": "Actions are represented by a property nested under \"Actions\" whose name is the unique URI that identifies the action. This URI shall be of the form:\n#Namespace.ActionName\nwhere\n\u2022 Namespace = The namespace used in the reference to the Redfish Schema in which the action is defined. For Redfish resources this shall be the version-independent namespace.\n\u2022 ActionName = The name of the action",
        "Rule": "6.5.26",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.28"
    },
    {
        "Description": "The links property shall be named \"Links\" and shall contain a property for each non-contained reference property defined in the Redfish Schema for that type. For single-valued reference properties, the value of the property shall be the single related resource id. For collection-valued reference properties, the value of the property shall be the array of related resource ids.",
        "Rule": "6.5.28",
        "Status": "PASS"
    },
    {
        "Rule": "6.5.35"
    },
    {
        "Description": "Responses representing a single resource shall not be broken into multiple results.",
        "Rule": "6.5.35",
        "Status": "PASS"
    }
]